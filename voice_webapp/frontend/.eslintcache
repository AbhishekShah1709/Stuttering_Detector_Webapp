[{"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/index.js":"1","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/App.js":"2","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js":"3","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js":"4","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js":"5"},{"size":500,"mtime":1614142475592,"results":"6","hashOfConfig":"7"},{"size":1090,"mtime":1617391229788,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1614142475592,"results":"9","hashOfConfig":"7"},{"size":3823,"mtime":1617392445392,"results":"10","hashOfConfig":"7"},{"size":5451,"mtime":1617390077136,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c49i83",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/index.js",[],"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/App.js",["23"],"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js",[],"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js",["24","25","26"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\n\nconst Mp3Recorder = new MicRecorder({\n  bitRate: 128,\n  prefix: \"data:audio/wav;base64,\",\n});\n\nexport default class Recorder extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false,\n      isRecorded: true,\n      stuttered: \"Not stuttered\",\n      checked: false,\n      blob_to_send: '',\n    }\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia({ audio: true },\n      () => {\n        console.log('Permission Granted');\n        this.setState({ isBlocked: false });\n      },\n      () => {\n        console.log('Permission Denied');\n        this.setState({ isBlocked: true })\n      },\n    );\n  }\n\n  start = () => {\n    if (this.state.isBlocked) {\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder\n        .start()\n        .then(() => {\n          this.setState({ isRecording: true });\n        }).catch((e) => console.error(e));\n    }\n  };\n\n  stop = () => {\n    Mp3Recorder\n      .stop()\n      .getMp3()\n      .then(([buffer, blob]) => {\n        const blobURL = URL.createObjectURL(blob)\n        this.setState({ isRecorded: false });\n        this.setState({ blob_to_send: blob });\n\n        console.log(blobURL);\n        console.log(buffer);\n        console.log(blob);\n        const binaryString = btoa(blobURL)\n        this.setState({ blobURL, isRecording: false });\n      }).catch((e) => console.log(e));\n  };\n\n  // On file upload (click the upload button)\n  doFeatureExtraction = () => {\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\"blob_details\", this.state.blob_to_send);\n    formData.append(\"category\", \"recorded\");\n\n\n    // Request made to the backend api\n    // Send formData object\n    let url = 'http://localhost:8000/api/disorder_detection/';\n\n    axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n      .then(res => {\n        this.setState({ show_features: res.data.features });\n        this.setState({ show_output: res.data.output });\n        var cnt = 0;\n        var curr = 0;\n        for (var i = 0; i < this.state.show_output.length; i++) {\n          if (this.state.show_output[i] == 1) {\n            curr++;\n          }\n          else {\n            curr = 0;\n          }\n          if (curr == 28) {\n            cnt++;\n          }\n        }\n        if (cnt > 2) {\n          this.setState({ stuttered: \"Stuttered\" });\n        }\n        this.setState({ checked: true });\n        console.log(cnt);\n        console.log(res.data);\n      })\n      .catch(err => console.log(err))\n\n  };\n  render() {\n    var isChecked = {\n      display: this.state.checked ? \"block\" : \"none\"\n    }\n    return (\n      <div>\n        <br />\n        <br />\n        <br />\n        <h1 style={{\n          fontWeight: \"bold\",\n        }}>\n          Test With Voice\n                </h1>\n        <br/>\n        <br/>\n        <button onClick={this.start} className=\"btn btn-primary\" disabled={this.state.isRecording}>\n          Record\n                </button>\n        <button onClick={this.stop} className=\"btn btn-primary\" disabled={!this.state.isRecording}>\n          Stop\n                </button>\n\n        <button onClick={this.doFeatureExtraction} className=\"btn btn-primary\" disabled={this.state.isRecorded}>\n          Run Model\n                </button>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n        <div style={{ display: this.state.isRecorded ? \"none\" : \"block\"}}>\n        <audio src={this.state.blobURL} controls=\"controls\" />\n        </div>\n        <div style={isChecked}> Given Input is {this.state.stuttered} </div>\n      </div>\n    )\n  }\n}\n","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js",["27","28","29","30"],{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":63,"column":15,"nodeType":"33","messageId":"34","endLine":63,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":94,"column":41,"nodeType":"38","messageId":"39","endLine":94,"endColumn":43},{"ruleId":"36","severity":1,"message":"37","line":100,"column":20,"nodeType":"38","messageId":"39","endLine":100,"endColumn":22},{"ruleId":"31","severity":1,"message":"40","line":4,"column":7,"nodeType":"33","messageId":"34","endLine":4,"endColumn":18},{"ruleId":"31","severity":1,"message":"41","line":57,"column":9,"nodeType":"33","messageId":"34","endLine":57,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":102,"column":41,"nodeType":"38","messageId":"39","endLine":102,"endColumn":43},{"ruleId":"36","severity":1,"message":"37","line":108,"column":20,"nodeType":"38","messageId":"39","endLine":108,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'binaryString' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Mp3Recorder' is assigned a value but never used.","'path' is assigned a value but never used."]