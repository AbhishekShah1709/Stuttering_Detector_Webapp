[{"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/index.js":"1","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js":"2","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/App.js":"3","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js":"4","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js":"5"},{"size":500,"mtime":1612357354828,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612357354828,"results":"8","hashOfConfig":"7"},{"size":1113,"mtime":1617129016732,"results":"9","hashOfConfig":"7"},{"size":3910,"mtime":1616234446886,"results":"10","hashOfConfig":"7"},{"size":6094,"mtime":1617129287056,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"g3hvew",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/index.js",[],["24","25"],"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js",[],"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/App.js",["26"],"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js",["27","28","29"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\n\nconst Mp3Recorder = new MicRecorder({\n    bitRate: 128,\n    prefix: \"data:audio/wav;base64,\",\n});\n\nexport default class Recorder extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisRecording: false,\n\t\t\tblobURL: '',\n\t\t\tisBlocked: false,\n\t\t\tisRecorded: false,\n            stuttered: \"Not stuttered\",\n            checked: false,\n            blob_to_send: '',\n\t\t}\n\t}\n\n    componentDidMount() {\t\n        navigator.getUserMedia({ audio: true },\n                () => {\n                    console.log('Permission Granted');\n                    this.setState({ isBlocked: false });\n                },\n                () => {\n                    console.log('Permission Denied');\n                    this.setState({ isBlocked: true })\n                },\n            );\n    }\n\n    start = () => {\n        if (this.state.isBlocked) {\n            console.log('Permission Denied');\n        } else {\n            Mp3Recorder\n                .start()\n                .then(() => {\n                    this.setState({ isRecording: true });\n                }).catch((e) => console.error(e));\n        }\n    };\n\n    stop = () => {\n        Mp3Recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                const blobURL = URL.createObjectURL(blob)\n                this.setState({isRecorded: false});\n                this.setState({blob_to_send: blob});\n              \n                console.log(blobURL);\n                console.log(buffer);\n                console.log(blob);\n                const binaryString = btoa(blobURL)\n                   this.setState({ blobURL, isRecording: false });\n            }).catch((e) => console.log(e));\n    };\n   \n     // On file upload (click the upload button)\n    doFeatureExtraction = () => {\n    \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\"blob_details\", this.state.blob_to_send);\n      formData.append(\"category\", \"recorded\");\n\n    \n      // Request made to the backend api\n      // Send formData object\n      let url = 'http://localhost:8000/api/disorder_detection/';\n\n      axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n      })\n        .then(res => {\n            this.setState({show_features: res.data.features});\n            this.setState({show_output: res.data.output});\n            var cnt = 0;\n            var curr = 0;\n            for(var i = 0;i<this.state.show_output.length;i++) {\n              if(this.state.show_output[i] == 1) {\n                curr++;\n              }\n              else {\n                curr = 0;\n              }\n              if(curr == 28) {\n                cnt++;\n              }\n            }\n            if(cnt > 2) {\n              this.setState({stuttered: \"Stuttered\"});\n            }\n            this.setState({checked: true});\n            console.log(cnt);\n          console.log(res.data);\n        })\n        .catch(err => console.log(err))\n\n    };   \n    render() {\n        var isChecked = {\n          display:this.state.checked?\"block\":\"none\"\n        }\n        return(\n                <div>\n                <button onClick={this.start} disabled={this.state.isRecording}>\n                Record\n                </button>\n                <button onClick={this.stop} disabled={!this.state.isRecording}>\n                Stop\n                </button>\n\n                <button onClick={this.doFeatureExtraction} disabled = {this.state.isRecorded}>\n                Run Model \n                </button>\n\n                <audio src={this.state.blobURL} controls=\"controls\" />\n                <div style = {isChecked}> Given Input is {this.state.stuttered} </div>\n                </div>\n              )\n    }\n}\n","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js",["30","31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":63,"column":23,"nodeType":"40","messageId":"41","endLine":63,"endColumn":35},{"ruleId":"43","severity":1,"message":"44","line":94,"column":44,"nodeType":"45","messageId":"46","endLine":94,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":100,"column":23,"nodeType":"45","messageId":"46","endLine":100,"endColumn":25},{"ruleId":"38","severity":1,"message":"47","line":4,"column":7,"nodeType":"40","messageId":"41","endLine":4,"endColumn":18},{"ruleId":"38","severity":1,"message":"48","line":54,"column":11,"nodeType":"40","messageId":"41","endLine":54,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":99,"column":44,"nodeType":"45","messageId":"46","endLine":99,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":105,"column":23,"nodeType":"45","messageId":"46","endLine":105,"endColumn":25},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'binaryString' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Mp3Recorder' is assigned a value but never used.","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]