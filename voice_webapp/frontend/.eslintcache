[{"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/index.js":"1","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/App.js":"2","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js":"3","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js":"4","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js":"5"},{"size":500,"mtime":1612357354828,"results":"6","hashOfConfig":"7"},{"size":1113,"mtime":1613801462797,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612357354828,"results":"9","hashOfConfig":"7"},{"size":1846,"mtime":1613736947400,"results":"10","hashOfConfig":"7"},{"size":3906,"mtime":1614602374883,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"g3hvew",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/index.js",[],["26","27"],"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/App.js",["28"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Recorder from './components/record_play.component.js'\nimport UploadFileSystem from './components/upload-file.component.js'\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to=\"/\" className=\"navbar-brand\">App</Link>\n            <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n            <Link to=\"/record\" className=\"nav-link\">Record</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/upload\" className=\"nav-link\">Upload File</Link>\n            </li>\n            </ul>\n            </div>\n            </nav>\n\n    <Route path=\"/record\" exact component={Recorder}/>\n    <Route path=\"/upload\" exact component={UploadFileSystem}/>\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js",[],"/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js",["29"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nexport default class Recorder extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisRecording: false,\n\t\t\tblobURL: '',\n\t\t\tisBlocked: false,\n\t\t}\n\t}\n\n    componentDidMount() {\t\n        navigator.getUserMedia({ audio: true },\n                () => {\n                    console.log('Permission Granted');\n                    this.setState({ isBlocked: false });\n                },\n                () => {\n                    console.log('Permission Denied');\n                    this.setState({ isBlocked: true })\n                },\n            );\n    }\n\n    start = () => {\n        if (this.state.isBlocked) {\n            console.log('Permission Denied');\n        } else {\n            Mp3Recorder\n                .start()\n                .then(() => {\n                    this.setState({ isRecording: true });\n                }).catch((e) => console.error(e));\n        }\n    };\n\n    stop = () => {\n        Mp3Recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                const blobURL = URL.createObjectURL(blob)\n                    console.log(blobURL);\n                   this.setState({ blobURL, isRecording: false });\n            }).catch((e) => console.log(e));\n    };\n    \n    render() {\n        return(\n                <div>\n                <button onClick={this.start} disabled={this.state.isRecording}>\n                Record\n                </button>\n                <button onClick={this.stop} disabled={!this.state.isRecording}>\n                Stop\n                </button>\n                <audio src={this.state.blobURL} controls=\"controls\" />\n                </div>\n              )\n    }\n}\n","/home/abhishek/iiit/SEM 6/BTP/voice_disorder_webapp/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js",["30","31"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nexport default class UploadFileSystem extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisRecording: false,\n\t\t\tblobURL: '',\n\t\t\tisBlocked: false,\n            selectedFile: null,\n            show_features: [],\n            show_output: []\n\t\t}\n\t}\n\n\nonFileChange = event => {\n    \n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n    \n    };\n    \n    // On file upload (click the upload button)\n    onFileUpload = () => {\n    \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\"audio_file\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"audio_name\", this.state.selectedFile.name);\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n      console.log(this.state.selectedFile.name);\n    \n      // Request made to the backend api\n      // Send formData object\n      let url = 'http://localhost:8000/api/audiofiles/';\n      var path = require(\"path\");\n      axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n        .then(res => {\n          this.setState({blobURL: \"http://localhost:8000\" + res.data.audio_file});\n          console.log(res.data);\n        })\n        .catch(err => console.log(err))\n\n    };\n\n    // On file upload (click the upload button)\n    doFeatureExtraction = () => {\n    \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\"file_details\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"file_name\", this.state.selectedFile.name);\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n      console.log(this.state.selectedFile.name);\n    \n      // Request made to the backend api\n      // Send formData object\n      let url = 'http://localhost:8000/api/disorder_detection/';\n\n      axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n        .then(res => {\n            this.setState({show_features: res.data.features});\n            this.setState({show_output: res.data.output});\n          console.log(res.data);\n        })\n        .catch(err => console.log(err))\n\n    };\n\n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n    \n      if (this.state.selectedFile) {\n         \n        return (\n          <div>\n            <h2>File Details:</h2>\n             \n<p>File Name: {this.state.selectedFile.name}</p>\n \n             \n<p>File Type: {this.state.selectedFile.type}</p>\n \n             \n<p>\n              Last Modified:{\" \"}\n              {this.state.selectedFile.lastModifiedDate.toDateString()}\n            </p>\n \n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <br />\n            <h4>Choose before Pressing the Upload button</h4>\n          </div>\n        );\n      }\n    };\n\n    render() {\n        return(\n                <div>\n                <h3> Upload your file </h3>\n                <div>\n                    <input type=\"file\" onChange={this.onFileChange} />\n                    <button onClick={this.onFileUpload}>\n                    Upload\n                    </button>\n                    \n                    <button onClick={this.doFeatureExtraction}>\n                    Run Model\n                    </button>\n                </div>\n\n                {this.fileData()}\n                <audio src={this.state.blobURL} controls=\"controls\" />\n                <div> {this.state.show_output} </div>\n                </div>\n              )\n    }\n}\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":13},{"ruleId":"36","severity":1,"message":"41","line":4,"column":7,"nodeType":"38","messageId":"39","endLine":4,"endColumn":18},{"ruleId":"36","severity":1,"message":"42","line":46,"column":11,"nodeType":"38","messageId":"39","endLine":46,"endColumn":15},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Mp3Recorder' is assigned a value but never used.","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]