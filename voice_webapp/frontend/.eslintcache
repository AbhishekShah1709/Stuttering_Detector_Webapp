[{"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/index.js":"1","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/App.js":"2","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js":"3","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js":"4","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js":"5"},{"size":500,"mtime":1614142475592,"results":"6","hashOfConfig":"7"},{"size":1090,"mtime":1617391229788,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1614142475592,"results":"9","hashOfConfig":"7"},{"size":3823,"mtime":1617392445392,"results":"10","hashOfConfig":"7"},{"size":5809,"mtime":1617424361272,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1c49i83",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/index.js",[],["26","27"],"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/App.js",["28"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Recorder from './components/record_play.component.js'\nimport UploadFileSystem from './components/upload-file.component.js'\nfunction App() {\n    return (\n        <Router>\n            <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg\">\n            <Link to=\"/\" className=\"navbar-brand\">App</Link>\n            <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n            <Link to=\"/record\" className=\"nav-link\">Record</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/upload\" className=\"nav-link\">Upload File</Link>\n            </li>\n            </ul>\n            </div>\n            </nav>\n\n    <Route path=\"/record\" exact component={Recorder}/>\n    <Route path=\"/upload\" exact component={UploadFileSystem}/>\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/reportWebVitals.js",[],"/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/record_play.component.js",["29","30","31"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\n\nconst Mp3Recorder = new MicRecorder({\n  bitRate: 128,\n  prefix: \"data:audio/wav;base64,\",\n});\n\nexport default class Recorder extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false,\n      isRecorded: true,\n      stuttered: \"Not stuttered\",\n      checked: false,\n      blob_to_send: '',\n    }\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia({ audio: true },\n      () => {\n        console.log('Permission Granted');\n        this.setState({ isBlocked: false });\n      },\n      () => {\n        console.log('Permission Denied');\n        this.setState({ isBlocked: true })\n      },\n    );\n  }\n\n  start = () => {\n    if (this.state.isBlocked) {\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder\n        .start()\n        .then(() => {\n          this.setState({ isRecording: true });\n        }).catch((e) => console.error(e));\n    }\n  };\n\n  stop = () => {\n    Mp3Recorder\n      .stop()\n      .getMp3()\n      .then(([buffer, blob]) => {\n        const blobURL = URL.createObjectURL(blob)\n        this.setState({ isRecorded: false });\n        this.setState({ blob_to_send: blob });\n\n        console.log(blobURL);\n        console.log(buffer);\n        console.log(blob);\n        const binaryString = btoa(blobURL)\n        this.setState({ blobURL, isRecording: false });\n      }).catch((e) => console.log(e));\n  };\n\n  // On file upload (click the upload button)\n  doFeatureExtraction = () => {\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\"blob_details\", this.state.blob_to_send);\n    formData.append(\"category\", \"recorded\");\n\n\n    // Request made to the backend api\n    // Send formData object\n    let url = 'http://localhost:8000/api/disorder_detection/';\n\n    axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n      .then(res => {\n        this.setState({ show_features: res.data.features });\n        this.setState({ show_output: res.data.output });\n        var cnt = 0;\n        var curr = 0;\n        for (var i = 0; i < this.state.show_output.length; i++) {\n          if (this.state.show_output[i] == 1) {\n            curr++;\n          }\n          else {\n            curr = 0;\n          }\n          if (curr == 28) {\n            cnt++;\n          }\n        }\n        if (cnt > 2) {\n          this.setState({ stuttered: \"Stuttered\" });\n        }\n        this.setState({ checked: true });\n        console.log(cnt);\n        console.log(res.data);\n      })\n      .catch(err => console.log(err))\n\n  };\n  render() {\n    var isChecked = {\n      display: this.state.checked ? \"block\" : \"none\"\n    }\n    return (\n      <div>\n        <br />\n        <br />\n        <br />\n        <h1 style={{\n          fontWeight: \"bold\",\n        }}>\n          Test With Voice\n                </h1>\n        <br/>\n        <br/>\n        <button onClick={this.start} className=\"btn btn-primary\" disabled={this.state.isRecording}>\n          Record\n                </button>\n        <button onClick={this.stop} className=\"btn btn-primary\" disabled={!this.state.isRecording}>\n          Stop\n                </button>\n\n        <button onClick={this.doFeatureExtraction} className=\"btn btn-primary\" disabled={this.state.isRecorded}>\n          Run Model\n                </button>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n        <div style={{ display: this.state.isRecorded ? \"none\" : \"block\"}}>\n        <audio src={this.state.blobURL} controls=\"controls\" />\n        </div>\n        <div style={isChecked}> Given Input is {this.state.stuttered} </div>\n      </div>\n    )\n  }\n}\n","/home/naman/project_6/BTP_Project/voice_webapp/frontend/src/components/upload-file.component.js",["32","33","34","35","36"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nexport default class UploadFileSystem extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      isRecorded: true,\n      isBlocked: false,\n      selectedFile: null,\n      show_features: [],\n      show_output: [],\n      stuttered: \"Not stuttered\",\n      checked: false,\n    }\n  }\n\n\n  onFileChange = event => {\n\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n\n  };\n  // componentDidMount() {\n  //   document.body.style.backgroundColor = \"pink\";\n  //   document.body.style.background = \"linear-gradient(140deg, #EADEDB 0%, #BC70A4 50%, #BFD641 75%)\";\n  // }\n  checkmp3(filename) {\n    var parts = filename.toString().split('.');\n    console.log(parts[parts.length - 1]);\n    if (parts[parts.length - 1] != 'mp3') {\n      alert(\"Please Give a Valid mp3 file\");\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  // On file upload (click the upload button)\n  onFileUpload = () => {\n\n    // Create an object of formData\n    const formData = new FormData();\n\n\n    var uploaded_file = this.state.selectedFile;\n    uploaded_file._name = uploaded_file.name.replaceAll(\" \", \"_\");\n    this.setState({ uploaded_file });\n\n    // Update the formData object\n    formData.append(\"audio_file\", this.state.selectedFile, this.state.selectedFile._name);\n    formData.append(\"audio_name\", this.state.selectedFile.name);\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n    console.log(this.state.selectedFile._name);\n    if (this.checkmp3(this.state.selectedFile._name)) {\n      // Request made to the backend api\n      // Send formData object\n      let url = 'http://localhost:8000/api/audiofiles/';\n      var path = require(\"path\");\n      axios.post(url, formData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      })\n        .then(res => {\n          this.setState({ blobURL: \"http://localhost:8000\" + res.data.audio_file });\n          this.setState({ isRecorded: false });\n          console.log(res.data);\n        })\n        .catch(err => console.log(err))\n    }\n  };\n\n  // On file upload (click the upload button)\n  doFeatureExtraction = () => {\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\"file_details\", this.state.selectedFile, this.state.selectedFile._name);\n    formData.append(\"file_name\", this.state.selectedFile._name);\n    formData.append(\"category\", \"uploaded\");\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n    console.log(this.state.selectedFile._name);\n\n    // Request made to the backend api\n    // Send formData object\n    let url = 'http://localhost:8000/api/disorder_detection/';\n\n    axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n      .then(res => {\n        this.setState({ show_features: res.data.features });\n        this.setState({ show_output: res.data.output });\n        var cnt = 0;\n        var curr = 0;\n        for (var i = 0; i < this.state.show_output.length; i++) {\n          if (this.state.show_output[i] == 1) {\n            curr++;\n          }\n          else {\n            curr = 0;\n          }\n          if (curr == 28) {\n            cnt++;\n          }\n        }\n        if (cnt > 2) {\n          this.setState({ stuttered: \"Stuttered\" });\n        }\n        else {\n          this.setState({ stuttered: \"Not Stuttered\" });\n        }\n        this.setState({ checked: true });\n        console.log(cnt);\n        console.log(res.data);\n      })\n      .catch(err => console.log(err))\n\n  };\n\n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {\n\n    if (this.state.selectedFile) {\n\n      return (\n        <div>\n          <h4 style={{\n            fontWeight: \"bold\",\n          }}>\n            File Details:</h4>\n          <h5>File Name: {this.state.selectedFile.name}</h5>\n          <h5>File Type: {this.state.selectedFile.type}</h5>\n          <h5>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </h5>\n\n        </div>\n      );\n    }\n\n    /*      else {\n            return (\n              <div>\n                <br />\n                <h5 style={{color: 'red'}}> Choose before Pressing the Upload button </h5>\n              </div>\n            );\n          }\n    */\n  };\n\n  render() {\n    var isChecked = { display: this.state.checked ? \"block\" : \"none\", fontWeight: \"bold\" }\n\n    return (\n\n\n      <div>\n        <br />\n        <br />\n        <br />\n\n        <h1 style={{\n          fontWeight: \"bold\",\n        }}>\n          Upload your file\n                </h1>\n\n        <br />\n        <br />\n\n        <div>\n\n          <input type=\"file\" onChange={this.onFileChange} />\n\n          <button type=\"button\" onClick={this.onFileUpload} className=\"btn btn-primary\" disabled={this.state.selectedFile == null}>\n            Upload\n                    </button>\n\n          <button type=\"button\" onClick={this.doFeatureExtraction} className=\"btn btn-primary\" disabled={this.state.isRecorded}>\n            Run Model\n                    </button>\n\n        </div>\n\n        <br />\n        <br />\n\n        {this.fileData()}\n\n        <br />\n        <br />\n\n        <div style={{ display: this.state.isRecorded ? \"none\" : \"block\", textAlign: \"center\" }}>\n          <audio src={this.state.blobURL} controls=\"controls\" />\n        </div>\n\n        <br />\n        <br />\n\n        <h3 style={isChecked} > Result: Given Input is {this.state.stuttered} </h3>\n\n\n      </div>\n    )\n  }\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":63,"column":15,"nodeType":"43","messageId":"44","endLine":63,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":94,"column":41,"nodeType":"48","messageId":"49","endLine":94,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":100,"column":20,"nodeType":"48","messageId":"49","endLine":100,"endColumn":22},{"ruleId":"41","severity":1,"message":"50","line":4,"column":7,"nodeType":"43","messageId":"44","endLine":4,"endColumn":18},{"ruleId":"46","severity":1,"message":"51","line":38,"column":33,"nodeType":"48","messageId":"49","endLine":38,"endColumn":35},{"ruleId":"41","severity":1,"message":"52","line":68,"column":11,"nodeType":"43","messageId":"44","endLine":68,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":113,"column":41,"nodeType":"48","messageId":"49","endLine":113,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":119,"column":20,"nodeType":"48","messageId":"49","endLine":119,"endColumn":22},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'binaryString' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Mp3Recorder' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]